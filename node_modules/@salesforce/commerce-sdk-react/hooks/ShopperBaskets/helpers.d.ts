import { ApiClients, Argument } from '../types';
import { ShopperBasketsTypes } from 'commerce-sdk-isomorphic';
type Client = ApiClients['shopperBaskets'];
type Basket = ShopperBasketsTypes.Basket;
/**
 * This is a helper function for Basket Mutations.
 * useShopperBasketsMutationHelper.addItemToNewOrExistingBasket: is responsible for managing the process of adding an item to a basket.
 *  - If a basket already exists, add the item to the basket immediately.
 *  - If a basket does not exist, create a new basket using the createBasket mutation
 * and then add the item to the newly created basket using the addItemToBasket mutation.
 *
 * @example
 * import useShopperBasketsMutationHelper from '@salesforce/commerce-sdk-react'
 *
 * const Page = () => {
 *      const helpers = useShopperBasketsMutationHelper()
 *
 *      const addToCart = async () => {
 *          const productItems = [{id: 123, quantity: 2}]
 *          await basketMutationHelpers.addItemToNewOrExistingBasket(productItems)
 *      }
 *
 * }
 */
export declare function useShopperBasketsMutationHelper(): {
    addItemToNewOrExistingBasket: (productItem: ({
        adjustedTax?: number | undefined;
        basePrice?: number | undefined;
        bonusDiscountLineItemId?: string | undefined;
        bonusProductLineItem?: boolean | undefined;
        bundledProductItems?: (any & {
            [key: string]: any;
        })[] | undefined;
        gift?: boolean | undefined;
        giftMessage?: string | undefined;
        inventoryId?: string | undefined;
        itemId?: string | undefined;
        itemText?: string | undefined;
        optionItems?: ({
            adjustedTax?: number | undefined;
            basePrice?: number | undefined;
            bonusDiscountLineItemId?: string | undefined;
            bonusProductLineItem?: boolean | undefined;
            bundledProductItems?: (any & {
                [key: string]: any;
            })[] | undefined;
            gift?: boolean | undefined;
            giftMessage?: string | undefined;
            inventoryId?: string | undefined;
            itemId?: string | undefined;
            itemText?: string | undefined;
            optionId: string;
            optionItems?: (any & {
                [key: string]: any;
            })[] | undefined;
            optionValueId: string;
            price?: number | undefined;
            priceAdjustments?: ({
                appliedDiscount?: ({
                    amount?: number | undefined;
                    percentage?: number | undefined;
                    priceBookId?: string | undefined;
                    type: string;
                } & {
                    [key: string]: any;
                }) | undefined;
                couponCode?: string | undefined;
                createdBy?: string | undefined;
                creationDate?: any;
                custom?: boolean | undefined;
                itemText?: string | undefined;
                lastModified?: any;
                manual?: boolean | undefined;
                price?: number | undefined;
                priceAdjustmentId?: string | undefined;
                promotionId?: string | undefined;
                promotionLink?: string | undefined;
                reasonCode?: string | undefined;
            } & {
                [key: string]: any;
            })[] | undefined;
            priceAfterItemDiscount?: number | undefined;
            priceAfterOrderDiscount?: number | undefined;
            productId?: string | undefined;
            productListItem?: {
                id: string;
                priority?: number | undefined;
                productDetailsLink?: {
                    productDescription?: string | undefined;
                    productId: string;
                    productName?: string | undefined;
                    title?: string | undefined;
                } | undefined;
                productList?: ({
                    description?: string | undefined;
                    name?: string | undefined;
                    public?: boolean | undefined;
                    title?: string | undefined;
                    type?: string | undefined;
                } & {
                    [key: string]: any;
                }) | undefined;
                public?: boolean | undefined;
                purchasedQuantity?: number | undefined;
                quantity?: number | undefined;
                type?: string | undefined;
            } | undefined;
            productName?: string | undefined;
            quantity?: number | undefined;
            shipmentId?: string | undefined;
            shippingItemId?: string | undefined;
            tax?: number | undefined;
            taxBasis?: number | undefined;
            taxClassId?: string | undefined;
            taxRate?: number | undefined;
        } & {
            [key: string]: any;
        })[] | undefined;
        price?: number | undefined;
        priceAdjustments?: ({
            appliedDiscount?: ({
                amount?: number | undefined;
                percentage?: number | undefined;
                priceBookId?: string | undefined;
                type: string;
            } & {
                [key: string]: any;
            }) | undefined;
            couponCode?: string | undefined;
            createdBy?: string | undefined;
            creationDate?: any;
            custom?: boolean | undefined;
            itemText?: string | undefined;
            lastModified?: any;
            manual?: boolean | undefined;
            price?: number | undefined;
            priceAdjustmentId?: string | undefined;
            promotionId?: string | undefined;
            promotionLink?: string | undefined;
            reasonCode?: string | undefined;
        } & {
            [key: string]: any;
        })[] | undefined;
        priceAfterItemDiscount?: number | undefined;
        priceAfterOrderDiscount?: number | undefined;
        productId?: string | undefined;
        productListItem?: {
            id: string;
            priority?: number | undefined;
            productDetailsLink?: {
                productDescription?: string | undefined;
                productId: string;
                productName?: string | undefined;
                title?: string | undefined;
            } | undefined;
            productList?: ({
                description?: string | undefined;
                name?: string | undefined;
                public?: boolean | undefined;
                title?: string | undefined;
                type?: string | undefined;
            } & {
                [key: string]: any;
            }) | undefined;
            public?: boolean | undefined;
            purchasedQuantity?: number | undefined;
            quantity?: number | undefined;
            type?: string | undefined;
        } | undefined;
        productName?: string | undefined;
        quantity?: number | undefined;
        shipmentId?: string | undefined;
        shippingItemId?: string | undefined;
        tax?: number | undefined;
        taxBasis?: number | undefined;
        taxClassId?: string | undefined;
        taxRate?: number | undefined;
    } & {
        [key: string]: any;
    })[]) => Promise<Basket>;
};
export {};
//# sourceMappingURL=helpers.d.ts.map