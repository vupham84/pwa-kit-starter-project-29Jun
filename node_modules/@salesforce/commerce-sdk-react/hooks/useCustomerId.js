"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _useAuthContext = _interopRequireDefault(require("./useAuthContext"));
var _useLocalStorage = _interopRequireDefault(require("./useLocalStorage"));
var _useConfig = _interopRequireDefault(require("./useConfig"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
/*
 * Copyright (c) 2022, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: BSD-3-Clause
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */

const onClient = typeof window !== 'undefined';

/**
 * Hook that returns the customer ID.
 *
 * @group Helpers
 * @category Shopper Authentication
 */
const useCustomerId = () => {
  if (onClient) {
    // `onClient` is a constant, so the hooks will always have the same execution order,
    // despite technically being inside a conditional.
    // eslint-disable-next-line react-hooks/rules-of-hooks
    const config = (0, _useConfig.default)();
    // eslint-disable-next-line react-hooks/rules-of-hooks
    return (0, _useLocalStorage.default)(`customer_id_${config.siteId}`);
  }
  // eslint-disable-next-line react-hooks/rules-of-hooks
  const auth = (0, _useAuthContext.default)();
  return auth.get('customer_id');
};
var _default = exports.default = useCustomerId;