"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _useAuthContext = _interopRequireDefault(require("./useAuthContext"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; } /*
 * Copyright (c) 2024, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: BSD-3-Clause
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
/**
 * @group Helpers
 * @category DNT
 *
 * @returns {Object} - The returned object containing DNT states and function to update preference
 * @property {boolean} selectedDnt - DNT user preference. Used to determine
 *              if the consent tracking form should be rendered
 * @property {boolean} effectiveDnt - effective DNT value to apply to
 *              analytics layers. Takes defaultDnt into account when selectedDnt is undefined.
 *              If defaultDnt is undefined as well, then SDK default is used.
 * @property {function} updateDnt - takes a DNT choice and creates the dw_dnt
 *              cookie and reauthorizes with SLAS
 * @property {function} updateDNT - @deprecated Deprecated since version 3.1.0. Use updateDnt instead.
 * @property {boolean} dntStatus - @deprecated Deprecated since version 3.1.0. Use selectedDnt instead.
 *
 *
 */
const useDNT = () => {
  const auth = (0, _useAuthContext.default)();
  const selectedDnt = auth.getDnt();
  const effectiveDnt = auth.getDnt({
    includeDefaults: true
  });
  const updateDnt = /*#__PURE__*/function () {
    var _ref = _asyncToGenerator(function* (preference) {
      yield auth.setDnt(preference);
    });
    return function updateDnt(_x) {
      return _ref.apply(this, arguments);
    };
  }();
  const updateDNT = updateDnt;
  const dntStatus = selectedDnt;
  return {
    selectedDnt,
    effectiveDnt,
    dntStatus,
    updateDNT,
    updateDnt
  };
};
var _default = exports.default = useDNT;