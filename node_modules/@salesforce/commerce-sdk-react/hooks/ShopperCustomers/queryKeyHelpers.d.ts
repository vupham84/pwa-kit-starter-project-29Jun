import { ShopperCustomers } from 'commerce-sdk-isomorphic';
import { Argument, ExcludeTail } from '../types';
type Client = ShopperCustomers<{
    shortCode: string;
}>;
type Params<T extends keyof QueryKeys> = Partial<Argument<Client[T]>['parameters']>;
export type QueryKeys = {
    getExternalProfile: [
        '/commerce-sdk-react',
        '/organizations/',
        string | undefined,
        '/customers/external-profile',
        Params<'getExternalProfile'>
    ];
    getCustomer: [
        '/commerce-sdk-react',
        '/organizations/',
        string | undefined,
        '/customers/',
        string | undefined,
        Params<'getCustomer'>
    ];
    getCustomerAddress: [
        '/commerce-sdk-react',
        '/organizations/',
        string | undefined,
        '/customers/',
        string | undefined,
        '/addresses/',
        string | undefined,
        Params<'getCustomerAddress'>
    ];
    getCustomerBaskets: [
        '/commerce-sdk-react',
        '/organizations/',
        string | undefined,
        '/customers/',
        string | undefined,
        '/baskets',
        Params<'getCustomerBaskets'>
    ];
    getCustomerOrders: [
        '/commerce-sdk-react',
        '/organizations/',
        string | undefined,
        '/customers/',
        string | undefined,
        '/orders',
        Params<'getCustomerOrders'>
    ];
    getCustomerPaymentInstrument: [
        '/commerce-sdk-react',
        '/organizations/',
        string | undefined,
        '/customers/',
        string | undefined,
        '/payment-instruments/',
        string | undefined,
        Params<'getCustomerPaymentInstrument'>
    ];
    getCustomerProductLists: [
        '/commerce-sdk-react',
        '/organizations/',
        string | undefined,
        '/customers/',
        string | undefined,
        '/product-lists',
        Params<'getCustomerProductLists'>
    ];
    getCustomerProductList: [
        '/commerce-sdk-react',
        '/organizations/',
        string | undefined,
        '/customers/',
        string | undefined,
        '/product-lists/',
        string | undefined,
        Params<'getCustomerProductList'>
    ];
    getCustomerProductListItem: [
        '/commerce-sdk-react',
        '/organizations/',
        string | undefined,
        '/customers/',
        string | undefined,
        '/product-lists/',
        string | undefined,
        '/items/',
        string | undefined,
        Params<'getCustomerProductListItem'>
    ];
    getPublicProductListsBySearchTerm: [
        '/commerce-sdk-react',
        '/organizations/',
        string | undefined,
        '/product-lists',
        Params<'getPublicProductListsBySearchTerm'>
    ];
    getPublicProductList: [
        '/commerce-sdk-react',
        '/organizations/',
        string | undefined,
        '/product-lists/',
        string | undefined,
        Params<'getPublicProductList'>
    ];
    getProductListItem: [
        '/commerce-sdk-react',
        '/organizations/',
        string | undefined,
        '/product-lists/',
        string | undefined,
        '/items/',
        string | undefined,
        Params<'getProductListItem'>
    ];
};
type QueryKeyHelper<T extends keyof QueryKeys> = {
    /** Generates the path component of the query key for an endpoint. */
    path: (params: Params<T>) => ExcludeTail<QueryKeys[T]>;
    /** Generates the full query key for an endpoint. */
    queryKey: (params: Params<T>) => QueryKeys[T];
};
export declare const getCustomer: QueryKeyHelper<'getCustomer'>;
export declare const getCustomerAddress: QueryKeyHelper<'getCustomerAddress'>;
export declare const getCustomerBaskets: QueryKeyHelper<'getCustomerBaskets'>;
export declare const getCustomerOrders: QueryKeyHelper<'getCustomerOrders'>;
export declare const getCustomerPaymentInstrument: QueryKeyHelper<'getCustomerPaymentInstrument'>;
export declare const getCustomerProductLists: QueryKeyHelper<'getCustomerProductLists'>;
export declare const getCustomerProductList: QueryKeyHelper<'getCustomerProductList'>;
export declare const getCustomerProductListItem: QueryKeyHelper<'getCustomerProductListItem'>;
export declare const getPublicProductListsBySearchTerm: QueryKeyHelper<'getPublicProductListsBySearchTerm'>;
export declare const getPublicProductList: QueryKeyHelper<'getPublicProductList'>;
export declare const getProductListItem: QueryKeyHelper<'getProductListItem'>;
export {};
//# sourceMappingURL=queryKeyHelpers.d.ts.map