"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getWellknownOpenidConfiguration = exports.getUserInfo = exports.getJwksUri = void 0;
var _commerceSdkIsomorphic = require("commerce-sdk-isomorphic");
var _utils = require("../utils");
/*
 * Copyright (c) 2023, Salesforce, Inc.
 * All rights reserved.
 * SPDX-License-Identifier: BSD-3-Clause
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */

// We must use a client with no parameters in order to have required/optional match the API spec

// This is defined here, rather than `types.ts`, because it relies on `Client` and `QueryKeys`,
// and making those generic would add too much complexity.

const getUserInfo = exports.getUserInfo = {
  path: params => ['/commerce-sdk-react', '/organizations/', params.organizationId, '/oauth2/userinfo'],
  queryKey: params => {
    return [...getUserInfo.path(params), (0, _utils.pickValidParams)(params, _commerceSdkIsomorphic.ShopperLogin.paramKeys.getUserInfo)];
  }
};
const getWellknownOpenidConfiguration = exports.getWellknownOpenidConfiguration = {
  path: params => ['/commerce-sdk-react', '/organizations/', params.organizationId, '/oauth2/.well-known/openid-configuration'],
  queryKey: params => {
    return [...getWellknownOpenidConfiguration.path(params), (0, _utils.pickValidParams)(params, _commerceSdkIsomorphic.ShopperLogin.paramKeys.getWellknownOpenidConfiguration)];
  }
};
const getJwksUri = exports.getJwksUri = {
  path: params => ['/commerce-sdk-react', '/organizations/', params.organizationId, '/oauth2/jwks'],
  queryKey: params => {
    return [...getJwksUri.path(params), (0, _utils.pickValidParams)(params, _commerceSdkIsomorphic.ShopperLogin.paramKeys.getJwksUri)];
  }
};