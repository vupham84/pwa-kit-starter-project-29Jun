import React from 'react';
import PropTypes from 'prop-types';
type GetToken = () => string | undefined | Promise<string | undefined>;
type ContextChangeHandler = () => void | Promise<void>;
type OptionalWhenDisabled<T> = ({
    enabled?: true;
} & T) | ({
    enabled: false;
} & Partial<T>);
/**
 *
 * @param enabled - flag to turn on/off Storefront Preview feature. By default, it is set to true.
 * This flag only applies if storefront is running in a Runtime Admin iframe.
 * @param getToken - A method that returns the access token for the current user
 */
export declare const StorefrontPreview: {
    ({ children, enabled, getToken, onContextChange }: React.PropsWithChildren<OptionalWhenDisabled<{
        getToken: GetToken;
        onContextChange?: ContextChangeHandler | undefined;
    }>>): import("react/jsx-runtime").JSX.Element;
    propTypes: {
        children: PropTypes.Requireable<PropTypes.ReactNodeLike>;
        enabled: PropTypes.Requireable<boolean>;
        getToken: (props: any, propName: any, componentName: any) => Error | undefined;
        onContextChange: PropTypes.Requireable<(...args: any[]) => any>;
    };
};
export default StorefrontPreview;
//# sourceMappingURL=storefront-preview.d.ts.map