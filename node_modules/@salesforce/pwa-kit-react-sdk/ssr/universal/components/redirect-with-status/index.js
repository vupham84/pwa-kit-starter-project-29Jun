"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _reactRouterDom = require("react-router-dom");
var _propTypes = _interopRequireDefault(require("prop-types"));
const _excluded = ["status", "staticContext"];
/*
 * Copyright (c) 2024, Salesforce, Inc.
 * All rights reserved.
 * SPDX-License-Identifier: BSD-3-Clause
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], t.indexOf(o) >= 0 || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }
function _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }
/**
 * The `RedirectWithStatus` component is used to specify a different status code when redirecting via
 * the Redirect component.
 * The default redirect behavior when this component is not used is to set a 302 status.
 *
 * @param {number} status - The HTTP status code. Defaults to 302 if not specified
 * @param {object} staticContext - The router context
 * @param {string} to - The redirect's target path
 */
const RedirectWithStatus = _ref => {
  let {
      status = 302,
      staticContext
    } = _ref,
    props = _objectWithoutProperties(_ref, _excluded);
  // Handle server-side rendering
  if (staticContext) {
    staticContext.status = status;
  }
  return /*#__PURE__*/_react.default.createElement(_reactRouterDom.Redirect, props);
};
RedirectWithStatus.propTypes = {
  status: _propTypes.default.number,
  staticContext: _propTypes.default.object,
  to: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.object])
};
var _default = exports.default = (0, _reactRouterDom.withRouter)(RedirectWithStatus);