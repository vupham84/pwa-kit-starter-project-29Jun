"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireDefault(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); } /*
 * Copyright (c) 2021, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: BSD-3-Clause
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */ /**
 * @module progressive-web-sdk/ssr/universal/components/_document
 */
/**
 * The Document is a special component that can be overridden in a project, it
 * provides the default document foundation for your PWA. This includes
 * defaults for lang, charset, viewport, theme-color, script locations, etc.
 * We do not recommend overriding this component, but if you do require fine grained control of
 * your application we recommend using this implementation as a starting point to ensure
 * the correct functionality of your PWA.
 *
 * The properties for this component will be set in the server-side rendering pipeline.
 * Failure to use all these properties will most likely result in a non-functioning
 * PWA.
 *
 * @param {Array.<Object>} props.beforeBodyEnd - The renderable elements to be placed directly before
 *      the end of the body tag.
 * @param {object} [props.bodyAttributes] - The attributes to be applied to the documents body tag.
 *      <br/>
 *      <br/>
 *      <i>These are set by using `react-helmet`. Please refer to their {@link https://github.com/nfl/react-helmet/tree/5.2.0#readme|docs}
 *      for its usage.</i>
 * @param {Array.<Object>} props.head - The elements to be placed inside the documents head tag.
 * @param {string} [props.html] - The HTML to be rendered in your documents html tag.
 * @param {object} [props.htmlAttributes] - The attributes to be applied to the documents html tag.
 *      <br/>
 *      <br/>
 *      <i>These are set by using `react-helmet`. Please refer to their {@link https://github.com/nfl/react-helmet/tree/5.2.0#readme|docs}
 *      for its usage.</i>
 */
const Document = props => {
  const {
    head,
    html,
    afterBodyStart,
    beforeBodyEnd,
    htmlAttributes,
    bodyAttributes
  } = props;
  return /*#__PURE__*/_react.default.createElement("html", _extends({
    lang: "en-US"
  }, htmlAttributes), /*#__PURE__*/_react.default.createElement("head", null, /*#__PURE__*/_react.default.createElement("meta", {
    name: "charset",
    content: "utf-8"
  }), /*#__PURE__*/_react.default.createElement("meta", {
    name: "viewport",
    content: "width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=5.0"
  }), /*#__PURE__*/_react.default.createElement("meta", {
    name: "format-detection",
    content: "telephone=no"
  }), head.map(child => child)), /*#__PURE__*/_react.default.createElement("body", bodyAttributes, afterBodyStart.map((child, i) => /*#__PURE__*/_react.default.createElement(_react.default.Fragment, {
    key: i
  }, child)), /*#__PURE__*/_react.default.createElement("div", {
    className: "react-target",
    dangerouslySetInnerHTML: {
      __html: html
    }
  }), beforeBodyEnd.map((child, i) => /*#__PURE__*/_react.default.createElement(_react.default.Fragment, {
    key: i
  }, child))));
};
Document.propTypes = {
  afterBodyStart: _propTypes.default.arrayOf(_propTypes.default.node).isRequired,
  beforeBodyEnd: _propTypes.default.arrayOf(_propTypes.default.node).isRequired,
  head: _propTypes.default.arrayOf(_propTypes.default.node).isRequired,
  html: _propTypes.default.string.isRequired,
  htmlAttributes: _propTypes.default.object,
  bodyAttributes: _propTypes.default.object
};
Document.defaultProps = {
  afterBodyStart: [],
  beforeBodyEnd: [],
  head: [],
  html: '',
  htmlAttributes: {},
  bodyAttributes: {}
};
var _default = exports.default = Document;