"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = _interopRequireWildcard(require("react"));
var _reactRouterDom = require("react-router-dom");
var _reactQuery = require("@tanstack/react-query");
var _loggerInstance = _interopRequireDefault(require("../../../../utils/logger-instance"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; } /*
 * Copyright (c) 2023, Salesforce, Inc.
 * All rights reserved.
 * SPDX-License-Identifier: BSD-3-Clause
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
// For good UX, show loading spinner long enough for users to see
const LOADING_SPINNER_MIN_DURATION = 500;

/**
 * A _private_ component to show loading spinner while refetching data on the client-side.
 * To trigger this refetch, we do soft navigation back to the referrer.
 * So this component is meant to be used as a route with `referrer` search param.
 *
 * @example
 * const navigate = useNavigation()
 * navigate(`/__refetch-data?referrer=${encodeURIComponent(urlOfCurrentPage)}`, 'replace')
 *
 * @private
 */
const Refresh = () => {
  const history = (0, _reactRouterDom.useHistory)();
  const location = (0, _reactRouterDom.useLocation)();
  let queryClient;
  try {
    // eslint-disable-next-line react-hooks/rules-of-hooks
    queryClient = (0, _reactQuery.useQueryClient)();
  } catch (err) {
    // `useQueryClient` throws an error if the project does not use react-query.
    // So in this case, leave `queryClient` as undefined. Continue to navigate to the referrer.
  }
  (0, _react.useEffect)(() => {
    const refetchData = /*#__PURE__*/function () {
      var _ref = _asyncToGenerator(function* () {
        var _queryClient;
        const showLoadingSpinner = new Promise(resolve => setTimeout(resolve, LOADING_SPINNER_MIN_DURATION));
        const invalidateQueries = (_queryClient = queryClient) === null || _queryClient === void 0 ? void 0 : _queryClient.invalidateQueries();
        yield Promise.all([showLoadingSpinner, invalidateQueries]);

        // Soft navigate to the referrer
        let referrer = new URLSearchParams(location.search).get('referrer');
        if (!referrer) {
          _loggerInstance.default.warn('Could not find `referrer` search param - redirecting to home page.', {
            namespace: 'Refresh.useEffect'
          });
          referrer = '/';
        }
        history.replace(referrer);
      });
      return function refetchData() {
        return _ref.apply(this, arguments);
      };
    }();
    refetchData();
  }, []);
  return /*#__PURE__*/_react.default.createElement(LoadingSpinner, null);
};
Refresh.displayName = 'Refresh';
const LoadingSpinner = () => {
  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement("style", null, `
                .pwa-kit-loading-spinner-outer {
                    z-index: 1300;
                    position: absolute;
                    top: 0px;
                    left: 0px;
                    right: 0px;
                    bottom: 0px;
                    background: rgba(255, 255, 255, 0.80);
                }
                .pwa-kit-loading-spinner-wrapper {
                    display: inline-block;
                    border-color: currentColor;
                    border-style: solid;
                    border-radius: 99999px;
                    border-width: 4px;
                    border-bottom-color: #C9C9C9;
                    border-left-color: #C9C9C9;
                    -webkit-animation: animation-b7n1on 0.65s linear infinite;
                    animation: animation-b7n1on 0.65s linear infinite;
                    width: 3rem;
                    height: 3rem;
                    position: absolute;
                    top: 50%;
                    left: 50%;
                    margin-left: -1.5em;
                    margin-top: -1.5em;
                    color: #0176D3;
                }
                .pwa-kit-loading-spinner-inner {
                    border: 0px;
                    clip: rect(0, 0, 0, 0);
                    width: 1px;
                    height: 1px;
                    margin: -1px;
                    padding: 0px;
                    overflow: hidden;
                    white-space: nowrap;
                    position: absolute;
                }
                `), /*#__PURE__*/_react.default.createElement("div", {
    className: "pwa-kit-loading-spinner-outer",
    "data-testid": "loading-spinner"
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: "pwa-kit-loading-spinner-wrapper"
  }, /*#__PURE__*/_react.default.createElement("span", {
    className: "pwa-kit-loading-spinner-inner"
  }, "Loading..."))));
};
var _default = exports.default = Refresh;