"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ServerContext = exports.CorrelationIdProvider = exports.CorrelationIdContext = void 0;
var _react = _interopRequireWildcard(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _reactRouterDom = require("react-router-dom");
var _loggerInstance = _interopRequireDefault(require("../../../utils/logger-instance"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/*
 * Copyright (c) 2021, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: BSD-3-Clause
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */

const CorrelationIdContext = exports.CorrelationIdContext = /*#__PURE__*/_react.default.createContext();
const ServerContext = exports.ServerContext = /*#__PURE__*/_react.default.createContext();

/**
 * This provider initializes the correlation id,
 * and will generate a new id whenever there is a location change
 * @private
 * @param children
 * @param correlationId - default correlation id
 * @param resetOnPageChange - a boolean to indicate if it needs to generate a new id when navigating to a new page
 */
const CorrelationIdProvider = ({
  children,
  correlationId,
  resetOnPageChange = true
}) => {
  const _correlationIdFn = typeof correlationId === 'function' && correlationId;
  const _correlationId = typeof correlationId !== 'function' && correlationId;
  if (resetOnPageChange && !_correlationIdFn) {
    _loggerInstance.default.warn('correlationId needs to be a function returning a uuid string when resetOnPageChange is true', {
      namespace: 'contexts.CorrelationIdProvider'
    });
  }
  const [id, setId] = _react.default.useState(_correlationId || _correlationIdFn());
  const location = (0, _reactRouterDom.useLocation)();
  const isFirstRun = (0, _react.useRef)(true);
  (0, _react.useEffect)(() => {
    // this hook only runs on client-side
    // don't run this on first render
    if (isFirstRun.current) {
      isFirstRun.current = false;
      return;
    }
    if (resetOnPageChange && _correlationIdFn) {
      // NOTE: the function needs to be an uuid v4.
      const newId = _correlationIdFn();
      setId(newId);
    }
  }, [location.pathname]);
  return /*#__PURE__*/_react.default.createElement(CorrelationIdContext.Provider, {
    value: {
      correlationId: id
    }
  }, children);
};
exports.CorrelationIdProvider = CorrelationIdProvider;
CorrelationIdProvider.propTypes = {
  children: _propTypes.default.element.isRequired,
  resetOnPageChange: _propTypes.default.bool,
  correlationId: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func]).isRequired,
  location: _propTypes.default.object
};