"use strict";

var _react = _interopRequireDefault(require("react"));
var _react2 = require("@testing-library/react");
var _reactRouterDom = require("react-router-dom");
var _history = require("history");
var _index = require("./index");
var _hooks = require("../hooks");
var _crypto = _interopRequireDefault(require("crypto"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _userEvent = _interopRequireDefault(require("@testing-library/user-event"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { default: e }; }
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; } /*
 * Copyright (c) 2022, salesforce.com, inc.
 * All rights reserved.
 * SPDX-License-Identifier: BSD-3-Clause
 * For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
const SampleProvider = props => {
  const {
    correlationId,
    resetOnPageChange
  } = props;
  return /*#__PURE__*/_react.default.createElement(_index.CorrelationIdProvider, {
    correlationId: correlationId,
    resetOnPageChange: resetOnPageChange
  }, props.children);
};
SampleProvider.propTypes = {
  children: _propTypes.default.element.isRequired,
  resetOnPageChange: _propTypes.default.bool,
  correlationId: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.func]).isRequired
};
const Component = () => {
  const {
    correlationId
  } = (0, _hooks.useCorrelationId)();
  return /*#__PURE__*/_react.default.createElement("div", {
    className: 'correlation-id'
  }, correlationId);
};
describe('CorrelationIdProvider', function () {
  test('Renders without errors', () => {
    const history = (0, _history.createMemoryHistory)();
    const id = _crypto.default.randomUUID();
    (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_reactRouterDom.Router, {
      history: history
    }, /*#__PURE__*/_react.default.createElement(SampleProvider, {
      correlationId: () => id
    }, /*#__PURE__*/_react.default.createElement(Component, null))));
    expect(_react2.screen.getByText(id)).toBeInTheDocument();
  });
  test('renders when correlationId is passed as a function', () => {
    const id = _crypto.default.randomUUID();
    const history = (0, _history.createMemoryHistory)();
    (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_reactRouterDom.Router, {
      history: history
    }, /*#__PURE__*/_react.default.createElement(SampleProvider, {
      correlationId: () => id
    }, /*#__PURE__*/_react.default.createElement(Component, null))));
    expect(_react2.screen.getByText(id)).toBeInTheDocument();
  });
  test('renders when correlationId is passed as a string', () => {
    const id = _crypto.default.randomUUID();
    const history = (0, _history.createMemoryHistory)();
    (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_reactRouterDom.Router, {
      history: history
    }, /*#__PURE__*/_react.default.createElement(SampleProvider, {
      correlationId: id,
      resetOnPageChange: false
    }, /*#__PURE__*/_react.default.createElement(Component, null))));
    expect(_react2.screen.getByText(id)).toBeInTheDocument();
  });
  test('generates a new id when changing page', /*#__PURE__*/_asyncToGenerator(function* () {
    const user = _userEvent.default.setup();
    const history = (0, _history.createMemoryHistory)();
    const Component = () => {
      const {
        correlationId
      } = (0, _hooks.useCorrelationId)();
      return /*#__PURE__*/_react.default.createElement("div", null, /*#__PURE__*/_react.default.createElement("div", {
        "data-testid": "correlation-id"
      }, correlationId), /*#__PURE__*/_react.default.createElement("button", {
        className: "button",
        onClick: () => history.push('/page-1')
      }, "Go to another page"));
    };
    (0, _react2.render)( /*#__PURE__*/_react.default.createElement(_reactRouterDom.Router, {
      history: history
    }, /*#__PURE__*/_react.default.createElement(SampleProvider, {
      correlationId: () => _crypto.default.randomUUID()
    }, /*#__PURE__*/_react.default.createElement(Component, null))));
    const firstRenderedId = _react2.screen.getByTestId('correlation-id').innerHTML;
    const button = _react2.screen.getByText(/go to another page/i);
    yield user.click(button);
    const secondRenderedId = _react2.screen.getByTestId('correlation-id').innerHTML;
    // expecting the provider to have a different correlation id when a page navigation happens
    expect(firstRenderedId).not.toEqual(secondRenderedId);
  }));
});